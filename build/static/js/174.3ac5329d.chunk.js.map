{"version":3,"file":"static/js/174.3ac5329d.chunk.js","mappings":"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","sources":["pages/OrderDetails.js","pages/OrderListing.js"],"sourcesContent":["import { Avatar, Grid, Typography, Button, Modal, Box } from \"@mui/material\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport * as api from \"../utils/api\";\r\nimport { getSign } from \"../utils/functions\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  boxShadow: 24,\r\n  p: 4\r\n};\r\n\r\nconst OrderDetails = ({ id }) => {\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const currency = getSign();\r\n\r\n  const [orders, setOrders] = useState();\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get_orders(id)\r\n      .then((response) => {\r\n        if (!response.error) {\r\n          setOrders(response.data[0]);\r\n        }\r\n      })\r\n      .catch(() => {});\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      <Button color=\"success\" variant=\"outlined\" onClick={handleOpen}>\r\n        Order Details\r\n      </Button>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n            Order Summary\r\n          </Typography>\r\n          <div className=\"border\" />\r\n          <div>\r\n            <div className=\"order-detail-img-wrapper\">\r\n              <Avatar\r\n                size=\"xl\"\r\n                src={\r\n                  orders &&\r\n                  orders.order_items[0].partner_details[0].partner_profile\r\n                }\r\n              />\r\n              <div className=\"order-detail-desc\">\r\n                <Typography variant=\"body1\" component=\"p\">\r\n                  {orders &&\r\n                    orders.order_items[0].partner_details[0].partner_name}\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  component=\"p\"\r\n                  sx={{ color: \"var(--light-color--)\" }}\r\n                >\r\n                  {orders &&\r\n                    orders.order_items[0].partner_details[0].partner_address}\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n            <div className=\"border\" />\r\n            <div className=\"order-details-wrapper\">\r\n              {orders &&\r\n                orders.order_items.map((order_data, index) => {\r\n                  return (\r\n                    <div key={index}>\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        component=\"p\"\r\n                        key={index}\r\n                        sx={{ fontWeight: 600 }}\r\n                      >\r\n                        {order_data.product_name}\r\n                      </Typography>\r\n                      <Grid container>\r\n                        <Grid item md={10}>\r\n                          <Typography variant=\"body2\" component=\"p\">\r\n                            <span>{order_data.quantity}</span> × {currency}\r\n                            {order_data.price}\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item md={2} sx={{ textAlign: \"end\" }}>\r\n                          <Typography variant=\"body2\" component=\"p\">\r\n                            {currency}\r\n                            {order_data.sub_total}\r\n                          </Typography>\r\n                        </Grid>\r\n                      </Grid>\r\n                      <div className=\"border\" />\r\n                    </div>\r\n                  );\r\n                })}\r\n            </div>\r\n            <div className=\"order-total\">\r\n              <Grid container>\r\n                <Grid item md={6} className=\"order-details\">\r\n                  <Typography\r\n                    variant=\"body1\"\r\n                    component=\"p\"\r\n                    sx={{ fontWeight: 600 }}\r\n                  >\r\n                    Total\r\n                  </Typography>\r\n\r\n                  <Typography variant=\"body1\" component=\"p\">\r\n                    Taxes & Charges\r\n                  </Typography>\r\n\r\n                  <Typography variant=\"body1\" component=\"p\">\r\n                    Total Pay\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  md={6}\r\n                  sx={{ textAlign: \"end\" }}\r\n                  className=\"order-details\"\r\n                >\r\n                  <Typography\r\n                    variant=\"body1\"\r\n                    component=\"p\"\r\n                    sx={{ fontWeight: 600 }}\r\n                  >\r\n                    {currency} {orders && orders.total}\r\n                  </Typography>\r\n\r\n                  <Typography variant=\"body1\" component=\"p\">\r\n                    {currency}\r\n                    {orders && orders.tax_amount}\r\n                  </Typography>\r\n\r\n                  <Typography variant=\"body1\" component=\"p\" className=\"values\">\r\n                    {currency}\r\n                    {orders && orders.total_payable}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <div className=\"border\" />\r\n            <div className=\"total\">\r\n              <Grid container>\r\n                <Grid item md={6}>\r\n                  <Typography variant=\"body1\" component=\"p\" className=\"bold\">\r\n                    Grand Total\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item md={6} sx={{ textAlign: \"end\" }}>\r\n                  <Typography variant=\"body1\" component=\"p\" className=\"bold\">\r\n                    {currency}\r\n                    {orders && orders.total_payable}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <div className=\"border\" />\r\n            <div className=\"order-summary\">\r\n              <div className=\"order-payment-wrapper\">\r\n                <div className=\"order-id order-style\">\r\n                  <Typography variant=\"body1\" component=\"p\">\r\n                    ORDER ID\r\n                  </Typography>\r\n                  <Typography\r\n                    className=\"mb20 light\"\r\n                    variant=\"body2\"\r\n                    component=\"p\"\r\n                  >\r\n                    {orders && orders.order_items[0].order_id}\r\n                  </Typography>\r\n                </div>\r\n                <div className=\"payment-type order-style\">\r\n                  <Typography variant=\"body1\" component=\"p\">\r\n                    PAYMENT\r\n                  </Typography>\r\n                  <Typography\r\n                    className=\"mb20 light\"\r\n                    variant=\"body2\"\r\n                    component=\"p\"\r\n                  >\r\n                    paid : using {orders && orders.payment_method}\r\n                  </Typography>\r\n                </div>\r\n                <div className=\"order-date order-style\">\r\n                  <Typography variant=\"body1\" component=\"p\">\r\n                    DATE\r\n                  </Typography>\r\n                  <Typography\r\n                    className=\"mb20 light\"\r\n                    variant=\"body2\"\r\n                    component=\"p\"\r\n                  >\r\n                    {orders && orders.date_added}\r\n                  </Typography>\r\n                </div>\r\n                <div className=\"order-phonenum order-style\">\r\n                  <Typography variant=\"body1\" component=\"p\">\r\n                    PHONE NO\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    component=\"p\"\r\n                    className=\"light mb20\"\r\n                  >\r\n                    {orders && orders.mobile.substring(0, 7)}×××\r\n                  </Typography>\r\n                </div>\r\n                <div className=\"order-phonenum order-style\">\r\n                  <Typography variant=\"body1\" component=\"p\">\r\n                    Deliver to\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" component=\"p\" className=\"light\">\r\n                    {orders && orders.address}\r\n                  </Typography>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Button\r\n            variant=\"contained\"\r\n            fullWidth\r\n            onClick={handleClose}\r\n            color=\"error\"\r\n            className=\"mt20\"\r\n            sx={{ textTransform: \"capitalize\" }}\r\n          >\r\n            Close\r\n          </Button>\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderDetails;\r\n","import { Button, CardMedia, Grid, Pagination, Typography } from \"@mui/material\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport * as api from \"../utils/api\";\r\nimport OrderDetails from \"./OrderDetails\";\r\nimport Nofound from \"./Nofound\";\r\nimport { getSign } from \"../utils/functions\";\r\n\r\nconst OrderListing = () => {\r\n  const currency = getSign();\r\n  const [orders, setOrders] = useState([]);\r\n  const [per_page] = useState(3);\r\n  const [page, setPage] = useState(1);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const Orders = (offset = 0) => {\r\n    api\r\n      .get_orders(\"\", per_page, offset)\r\n      .then((response) => {\r\n        if (!response.error) {\r\n          var totalPages = parseInt(response.total) / per_page;\r\n          totalPages = Math.ceil(totalPages);\r\n          setPage(totalPages);\r\n          setOrders(response.data);\r\n          console.log(response.data);\r\n        }\r\n      })\r\n      .catch(() => {});\r\n  };\r\n\r\n  useEffect(() => {\r\n    Orders();\r\n    // eslint-disable-next-line\r\n  },[]);\r\n\r\n  const CancleOrder = (id) => {\r\n    api\r\n      .update_order_status(\"cancelled\", id, \"test\")\r\n      .then((response) => {\r\n        if (!response.error) {\r\n          setOrders(response.data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handlePageChange = (event, selectedPage) => {\r\n    if (currentPage !== selectedPage) {\r\n      const offset = (selectedPage - 1) * per_page;\r\n      setCurrentPage(selectedPage);\r\n      Orders(offset);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {orders && orders !== 0 ? (\r\n        <>\r\n          {orders &&\r\n            orders.map((order, index) => {\r\n              const { order_items, total_payable, active_status, id, address } =\r\n                order;\r\n              var status = [\r\n                \"awaiting\",\r\n                \"pending\",\r\n                \"preparing\",\r\n                \"out_for_delivery\",\r\n                \"delivered\",\r\n                \"cancelled\"\r\n              ];\r\n              const cancelable_till = order_items[0].cancelable_till;\r\n              var cancellable_index = status.indexOf(cancelable_till);\r\n              var active_index = status.indexOf(active_status);\r\n\r\n              return (\r\n                <div className=\"order-wrapper\" key={index}>\r\n                  <div className=\"order-content-wrapper\">\r\n                    <Grid container spacing={3}>\r\n                      <Grid item md={2}>\r\n                        <div className=\"order-image-wrapper\">\r\n                          <CardMedia\r\n                            component=\"img\"\r\n                            alt={order_items[0].name}\r\n                            height=\"140\"\r\n                            image={\r\n                              order_items[0].partner_details[0].partner_profile\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </Grid>\r\n                      <Grid item md={10}>\r\n                        <div className=\"order-name-wrapper\">\r\n                          <Grid container>\r\n                            <Grid item md={6} sx={{ mt: \"\", mb: \"\" }}>\r\n                              <Typography\r\n                                variant=\"h6\"\r\n                                component=\"h5\"\r\n                                className=\"ml20\"\r\n                              >\r\n                                {order_items[0].partner_details[0].partner_name}\r\n                              </Typography>\r\n                              <Typography\r\n                                variant=\"body2\"\r\n                                component=\"h5\"\r\n                                className=\"order-location-wrapper ml20\"\r\n                                color=\"var(--light-color--)\"\r\n                              >\r\n                                {address}\r\n                              </Typography>\r\n                            </Grid>\r\n                            <Grid item md={6} sx={{ textAlign: \"end\" }}>\r\n                              <Button\r\n                                color=\"success\"\r\n                                sx={{ fontWeight: \"bold\" }}\r\n                              >\r\n                                {active_status}\r\n                              </Button>\r\n                            </Grid>\r\n                          </Grid>\r\n                          {order.order_items.map((order_data, index) => {\r\n                            const { product_name, quantity } = order_data;\r\n                            return (\r\n                              <Typography\r\n                                variant=\"subtitle1\"\r\n                                component=\"h5\"\r\n                                className=\"order-summary ml20\"\r\n                                key={index}\r\n                              >\r\n                                {product_name} ×{\" \"}\r\n                                <span style={{ color: \"var(--light-color--)\" }}>\r\n                                  {quantity}\r\n                                </span>\r\n                              </Typography>\r\n                            );\r\n                          })}\r\n                          <Typography\r\n                            variant=\"body2\"\r\n                            component=\"h5\"\r\n                            color=\"var(--light-color--)\"\r\n                            className=\"order-summary ml20\"\r\n                          >\r\n                            {order_items[0].date_added}\r\n                          </Typography>\r\n                        </div>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <div className=\"border\" />\r\n                    <div className=\"total-amount\">\r\n                      <Grid container>\r\n                        <Grid item md={6} className=\"bill-detail-wrapper\">\r\n                          <Typography variant=\"subtitle1\" component=\"h5\">\r\n                            Total Pay\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item md={6}>\r\n                          <Typography\r\n                            variant=\"subtitle1\"\r\n                            component=\"h5\"\r\n                            sx={{ textAlign: \"end\" }}\r\n                          >\r\n                            {currency} {total_payable}\r\n                          </Typography>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </div>\r\n                    <div className=\"border\" />\r\n                    <div className=\"order-btn-wrapper \">\r\n                      <OrderDetails id={id} />\r\n                      {order_items[0].is_cancelable === 1 &&\r\n                      active_index <= cancellable_index ? (\r\n                        <Button\r\n                          key={index}\r\n                          variant=\"contained\"\r\n                          color=\"error\"\r\n                          onClick={(e) => CancleOrder(id)}\r\n                        >\r\n                          cancel Order\r\n                        </Button>\r\n                      ) : null}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          <div className=\"pagination\">\r\n            <Pagination\r\n              count={page}\r\n              color=\"error\"\r\n              variant=\"outlined\"\r\n              shape=\"rounded\"\r\n              onChange={handlePageChange}\r\n              defaultPage={currentPage}\r\n            />\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Nofound />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderListing;\r\n"],"names":["style","position","top","left","transform","width","bgcolor","boxShadow","p","id","handleClose","setOpen","React","open","currency","getSign","useState","orders","setOrders","useEffect","api","then","response","error","data","catch","Button","color","variant","onClick","Modal","onClose","Box","sx","Typography","component","className","Avatar","size","src","order_items","partner_details","partner_profile","partner_name","partner_address","map","order_data","index","fontWeight","product_name","Grid","container","item","md","quantity","price","textAlign","sub_total","total","tax_amount","total_payable","order_id","payment_method","date_added","mobile","substring","address","fullWidth","textTransform","per_page","page","setPage","currentPage","setCurrentPage","Orders","offset","totalPages","parseInt","Math","ceil","console","log","order","active_status","status","cancelable_till","cancellable_index","indexOf","active_index","spacing","CardMedia","alt","name","height","image","mt","mb","is_cancelable","e","CancleOrder","Pagination","count","shape","onChange","event","selectedPage","defaultPage","Nofound"],"sourceRoot":""}